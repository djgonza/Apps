{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n\tdeclarations: [\n\t\tLoginPage,\n\t],\n\timports: [\n\t\tIonicPageModule.forChild(LoginPage),\n\t\tTranslateModule.forChild()\n\t],\n\texports: [\n\t\tLoginPage\n\t]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Platform, IonicPage, NavController, ToastController } from 'ionic-angular';\n\nimport { GooglePlus } from '@ionic-native/google-plus';\n\nimport { User } from '../../providers/providers';\n//import { MainPage } from '../pages';\n\n@IonicPage()\n@Component({\n\tselector: 'page-login',\n\ttemplateUrl: 'login.html'\n})\nexport class LoginPage {\n\n\t// The account fields for the login form.\n\t// If you're using the username field with or without email, make\n\t// sure to add it to the type\n\taccount: { email: string, password: string } = {\n\t\temail: 'd@gmail.com',\n\t\tpassword: '123'\n\t};\n\n\t// Our translated text strings\n\tprivate loginErrorString: string;\n\tprivate googleKey: string;\n\tprivate userData:any;\n\n\tconstructor(\n\t\tpublic platform: Platform,\n\t\tpublic navCtrl: NavController,\n\t\tpublic user: User,\n\t\tpublic toastCtrl: ToastController,\n\t\tpublic translateService: TranslateService,\n\t\tprivate googlePlus: GooglePlus) {\n\n\t\tthis.googleKey = '';//'915920998189-ko5u3bocqak8btebdhe1m98g3fgbj313.apps.googleusercontent.com';\n\n\t\tthis.userData = {\n\t\t\temail: '',\n\t\t\tuserId: ''\n\t\t}\n\n\n\t\t// Mensaje de error login dependiendo del idioma\n\t\tthis.translateService.get('LOGIN_ERROR').subscribe((value) => {\n\t\t\tthis.loginErrorString = value;\n\t\t})\n\n\t\tif(localStorage.getItem(\"token\")){\n\t\t\tconsole.log(localStorage.getItem(\"token\"));\n\t\t}\n\n\t\tthis.platform.ready().then((readySource) => {\n\n\t\t\tconsole.log('Platform ready from', readySource);\n\t\t\t\n\t\t\tthis.doLoginByGoogle();\n\n\t\t});\n\n\t}\n\n\tdoDisconnectByGoogle () {\n\t\tthis.googlePlus.disconnect()\n\t\t.then (res => {\n\t\t\tconsole.log(\"res\", res);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"err\", err);\n\t\t});\n\t}\n\n\tdoLogoutByGoogle () {\n\t\tthis.googlePlus.logout()\n\t\t.then (res => {\n\t\t\tconsole.log(\"res\", res);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"err\", err);\n\t\t});\n\t}\n\n\tdoLoginByGoogle () {\n\t\tconsole.log(\"doLoginByGoogle\");\n\t\tthis.googlePlus.login({\n\t\t\t'webClientId': this.googleKey\n\t\t})\n\t\t.then(res => {\n\t\t\tconsole.log(\"res\")\n\t\t\tconsole.log(JSON.stringify(res))\n\t\t\tthis.userData = res;\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"err\");\n\t\t\tconsole.log(err);\n\t\t});\n\t}\n\n\t// Attempt to login in through our User service\n\tdoLogin() {\n\t\tconsole.log(\"do Login\");\n\t\t/*this.user.login(this.account)\n\t\t.map(res => res.json())\n\t\t.subscribe((resp) => {\n\t\t\tconsole.log(resp);\n\t\t\t//this.navCtrl.push(MainPage);\n\t\t\tlocalStorage.setItem(\"token\", resp.token);\n\t\t}, (err) => {\n\t\t\t// Unable to log in\n\t\t\tlet toast = this.toastCtrl.create({\n\t\t\t\tmessage: this.loginErrorString,\n\t\t\t\tduration: 5000,\n\t\t\t\tposition: 'top'\n\t\t\t});\n\t\t\ttoast.present();\n\t\t});*/\n\n\t}\n\n\tgetUserByToken () {\n\n\t\t/*this.user.login(this.account)\n\t\t.map(res => res.json())\n\t\t.subscribe((resp) => {\n\t\t\tconsole.log(resp);\n\t\t\t//this.navCtrl.push(MainPage);\n\t\t\tlocalStorage.setItem(\"token\", resp.token);\n\t\t}, (err) => {\n\t\t\t// Unable to log in\n\t\t\tlet toast = this.toastCtrl.create({\n\t\t\t\tmessage: this.loginErrorString,\n\t\t\t\tduration: 5000,\n\t\t\t\tposition: 'top'\n\t\t\t});\n\t\t\ttoast.present();\n\t\t});*/\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}